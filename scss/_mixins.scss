@mixin ir {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}
@mixin cf() {
    & {
        *zoom: 1;
    }
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin media($type) {

  @if $type == mobile {

      @media only screen and (max-width:50em)  {
          @content;
      }

  }
  @if $type == tablet {

      @media only screen and (min-width:50em)  {
          @content;
      }

  }

  @if $type == desktop {

      @media only screen and (min-width:70em)  {
          @content;
      }

  }

  @if $type == desktopx {

      @media only screen and (min-width:1200px)  {
          @content;
      }

  }

  @if $type == not-desktop {

      @media only screen and (max-width:55em)  {
          @content;
      }

  }

  @if $type == shortscreen {

      @media only screen and (min-width:em(1020)) and (max-height:700px)  {
          @content;
      }

  }


  
  @if $type == afterPhone {

      @media only screen and (min-width: $maxProductImageWidth - 200)  {
          @content;
      }

  }
  
  // @if $type == container {

  //     @media only screen and (min-width:em(1020)) and (min-height:700px)  {
  //         @content;
  //     }

  // }
  @if $type == container {

      @media only screen and (min-width:em(1020))  {
          @content;
      }

  }


  @else if $type == mobile {

      @media only screen and (max-width:767px) {
          @content;
      }

  }

}

$public_path: "../../images/";
 
@mixin svg-image($name) {
  background-image: url('#{$public_path}#{$name}.png');
  background-image: none, url('#{$public_path}#{$name}.svg');
}

.ib {
  display: inline-block;
  vertical-align: top;
}


@mixin diagonal-pattern($angle, $bgcolor, $color1, $color2, $size) {
  background: linear-gradient($angle, $color1 25%,
    $color2 25%, $color2 50%, 
    $color1 50%, $color1 75%, 
    $color2 75%);
  background-color: $bgcolor;
  background-size: $size;
}


@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}



