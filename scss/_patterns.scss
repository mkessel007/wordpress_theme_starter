%none {
	display: none;
}
%ib {
	display: inline-block;
	margin-right: -4px;
	
}

%no-appearance {
	-webkit-appearance: none;
		-moz-appearance: none;
}

%cf   {
	&:before,
	&:after {
	    content: " "; /* 1 */
	    display: table; /* 2 */
	}
	
	&:after {
	    clear: both;
	}
}

.cf {
	@extend %cf;
}



%float-right {
	@include media(tablet) {
		float: right;
	}	
}
%float-left {
	@include media(tablet) {
		float: left;
	}
}

%bl {
	display: block;
}

%ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

.ul {
	@extend %ul;
}

%menu-style {
	list-style: none;
	padding: 0;
	margin: 0;
	li {
		display: inline-block;
		font-size: 1rem;
	}
}

%nodec {
	text-decoration: none;
}

%center {
	text-align: center;
}

%upcase {
	text-transform: uppercase;
}


%rel, .relative {
	position: relative;
}
%ab {
	position: absolute;
}
%fix  {
	position: fixed;
}






%hv-center {
	top: 0; bottom: 0;
	right: 0; left: 0;
	margin: auto;
}

%hidden {
	* {
		height: 0;
		width: 0;
		padding: 0;
		margin: 0;
		overflow: hidden;
	}
}




%ir, .ir, .screenReader {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}



%centered {
	text-align: center;
}




%collapsed, .collapsed, .collapsed * {
	height: 0;
	max-height: 0;
	padding-top: 0;
	padding-bottom: 0;
	overflow: hidden;

}

.alignleft {
	@include media(tablet) {
		float: left;
		padding-right: 2em;
		padding-top: 2em;
	}
}

.alignright {
	@include media(tablet) {
		float: right;
		padding-left: 2em;
		padding-top: 2em;

	}
} 

.alignleft, .alignright {
	&.no-pad {
		padding: 0;
	}
}


.wp-caption {
	@extend %rel;
	img {
		max-width: 100%;
	}
	max-width: 100%;
	@include media(tablet) {
		max-width: em(300);
	}
}


.embed-container { position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden; max-width: 100%; height: auto; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }



// easing equation by Rob Penner (twitter @robpenner)
// code forked from https://github.com/MatthewWagerfield/LESS-CSS3-Mixins
// Cubic
$easeInCubic:  cubic-bezier(0.550, 0.055, 0.675, 0.190);
$easeOutCubic:  cubic-bezier(0.215, 0.610, 0.355, 1.000);
$easeInOutCubic :  cubic-bezier(0.645, 0.045, 0.355, 1.000);

// Circ
$easeInCirc:  cubic-bezier(0.600, 0.040, 0.980, 0.335);
$easeOutCirc:  cubic-bezier(0.075, 0.820, 0.165, 1.000);
$easeInOutCirc:  cubic-bezier(0.785, 0.135, 0.150, 0.860);

// Expo
$easeInExpo:  cubic-bezier(0.950, 0.050, 0.795, 0.035);
$easeOutExpo:  cubic-bezier(0.190, 1.000, 0.220, 1.000);
$easeInOutExpo:  cubic-bezier(1.000, 0.000, 0.000, 1.000);

// Quad
$easeInQuad:  cubic-bezier(0.550, 0.085, 0.680, 0.530);
$easeOutQuad:  cubic-bezier(0.250, 0.460, 0.450, 0.940);
$easeInOutQuad:  cubic-bezier(0.455, 0.030, 0.515, 0.955);

// Quart
$easeInQuart:  cubic-bezier(0.895, 0.030, 0.685, 0.220);
$easeOutQuart:  cubic-bezier(0.165, 0.840, 0.440, 1.000);
$easeInOutQuart :  cubic-bezier(0.770, 0.000, 0.175, 1.000);

// Quint
$easeInQuint:  cubic-bezier(0.755, 0.050, 0.855, 0.060);
$easeOutQuint:  cubic-bezier(0.230, 1.000, 0.320, 1.000);
$easeInOutQuint :  cubic-bezier(0.860, 0.000, 0.070, 1.000);

// Sine
$easeInSine:  cubic-bezier(0.470, 0.000, 0.745, 0.715);
$easeOutSine:  cubic-bezier(0.390, 0.575, 0.565, 1.000);
$easeInOutSine:  cubic-bezier(0.445, 0.050, 0.550, 0.950);

// Back
$easeInBack:  cubic-bezier(0.600, -0.280, 0.735, 0.045);
$easeOutBack:  cubic-bezier(0.175,	0.885, 0.320, 1.275);
$easeInOutBack:  cubic-bezier(0.680, -0.550, 0.265, 1.550);


.arrow {
  display: inline-block; 
  position: absolute;
  width: 15px;
  height: 15px;
  background: transparent;
  text-indent: -9999px;
  border: {
    top: 1px solid black;
    left: 1px solid black;
  }
  transition: all .3s ease-in-out;
  text-decoration: none;
  color: transparent;
  top: 50%;
  cursor: pointer;
  
  &:hover {
    border: {
      color:  black;
      width: 1px;
    }
  }
  
  &:before {
    display: block;
    height: 100%;
    width: 100%; 
    margin: {
      left: -50%;
      top: -50%;
    }
    content: "";
    transform: rotate(45deg);
  }
  
  &.arrow-left {
    transform: rotate(-45deg);  
    left: 0;
  }
  
  &.arrow-right {
    transform: rotate(135deg);  
    right: 0;
  }
  
}


.close {
	@extend %rel;
	display: inline-block;
	width: 20px;
	height: 20px;
	overflow: hidden;
	transform: rotate(45deg);
}



input[type="search"], input[type="text"], input[type="submit"], button[type="submit"] {
	@extend %no-appearance;
	background: none;
	border: 1px solid $black;
}





.relative-container {
	@extend %rel;
	
}
